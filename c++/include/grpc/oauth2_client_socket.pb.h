// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oauth2_client_socket.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_oauth2_5fclient_5fsocket_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_oauth2_5fclient_5fsocket_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_oauth2_5fclient_5fsocket_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_oauth2_5fclient_5fsocket_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_oauth2_5fclient_5fsocket_2eproto;
namespace oauth2ClientSocket {
class Empty;
struct EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class SocketIdWithToken;
struct SocketIdWithTokenDefaultTypeInternal;
extern SocketIdWithTokenDefaultTypeInternal _SocketIdWithToken_default_instance_;
}  // namespace oauth2ClientSocket
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace oauth2ClientSocket {

// ===================================================================


// -------------------------------------------------------------------

class SocketIdWithToken final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oauth2ClientSocket.SocketIdWithToken) */ {
 public:
  inline SocketIdWithToken() : SocketIdWithToken(nullptr) {}
  ~SocketIdWithToken() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SocketIdWithToken(::google::protobuf::internal::ConstantInitialized);

  inline SocketIdWithToken(const SocketIdWithToken& from)
      : SocketIdWithToken(nullptr, from) {}
  SocketIdWithToken(SocketIdWithToken&& from) noexcept
    : SocketIdWithToken() {
    *this = ::std::move(from);
  }

  inline SocketIdWithToken& operator=(const SocketIdWithToken& from) {
    CopyFrom(from);
    return *this;
  }
  inline SocketIdWithToken& operator=(SocketIdWithToken&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SocketIdWithToken& default_instance() {
    return *internal_default_instance();
  }
  static inline const SocketIdWithToken* internal_default_instance() {
    return reinterpret_cast<const SocketIdWithToken*>(
               &_SocketIdWithToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SocketIdWithToken& a, SocketIdWithToken& b) {
    a.Swap(&b);
  }
  inline void Swap(SocketIdWithToken* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SocketIdWithToken* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SocketIdWithToken* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SocketIdWithToken>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SocketIdWithToken& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SocketIdWithToken& from) {
    SocketIdWithToken::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SocketIdWithToken* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "oauth2ClientSocket.SocketIdWithToken";
  }
  protected:
  explicit SocketIdWithToken(::google::protobuf::Arena* arena);
  SocketIdWithToken(::google::protobuf::Arena* arena, const SocketIdWithToken& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccessTokenFieldNumber = 2,
    kRefreshTokenFieldNumber = 3,
    kSocketIdFieldNumber = 1,
  };
  // string accessToken = 2;
  void clear_accesstoken() ;
  const std::string& accesstoken() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accesstoken(Arg_&& arg, Args_... args);
  std::string* mutable_accesstoken();
  PROTOBUF_NODISCARD std::string* release_accesstoken();
  void set_allocated_accesstoken(std::string* value);

  private:
  const std::string& _internal_accesstoken() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accesstoken(
      const std::string& value);
  std::string* _internal_mutable_accesstoken();

  public:
  // string refreshToken = 3;
  void clear_refreshtoken() ;
  const std::string& refreshtoken() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_refreshtoken(Arg_&& arg, Args_... args);
  std::string* mutable_refreshtoken();
  PROTOBUF_NODISCARD std::string* release_refreshtoken();
  void set_allocated_refreshtoken(std::string* value);

  private:
  const std::string& _internal_refreshtoken() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_refreshtoken(
      const std::string& value);
  std::string* _internal_mutable_refreshtoken();

  public:
  // int32 socketId = 1;
  void clear_socketid() ;
  ::int32_t socketid() const;
  void set_socketid(::int32_t value);

  private:
  ::int32_t _internal_socketid() const;
  void _internal_set_socketid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:oauth2ClientSocket.SocketIdWithToken)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      68, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr accesstoken_;
    ::google::protobuf::internal::ArenaStringPtr refreshtoken_;
    ::int32_t socketid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_oauth2_5fclient_5fsocket_2eproto;
};// -------------------------------------------------------------------

class Empty final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:oauth2ClientSocket.Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Empty(::google::protobuf::internal::ConstantInitialized);

  inline Empty(const Empty& from)
      : Empty(nullptr, from) {}
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }
  inline void Swap(Empty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Empty* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "oauth2ClientSocket.Empty";
  }
  protected:
  explicit Empty(::google::protobuf::Arena* arena);
  Empty(::google::protobuf::Arena* arena, const Empty& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:oauth2ClientSocket.Empty)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_oauth2_5fclient_5fsocket_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SocketIdWithToken

// int32 socketId = 1;
inline void SocketIdWithToken::clear_socketid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.socketid_ = 0;
}
inline ::int32_t SocketIdWithToken::socketid() const {
  // @@protoc_insertion_point(field_get:oauth2ClientSocket.SocketIdWithToken.socketId)
  return _internal_socketid();
}
inline void SocketIdWithToken::set_socketid(::int32_t value) {
  _internal_set_socketid(value);
  // @@protoc_insertion_point(field_set:oauth2ClientSocket.SocketIdWithToken.socketId)
}
inline ::int32_t SocketIdWithToken::_internal_socketid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.socketid_;
}
inline void SocketIdWithToken::_internal_set_socketid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.socketid_ = value;
}

// string accessToken = 2;
inline void SocketIdWithToken::clear_accesstoken() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.accesstoken_.ClearToEmpty();
}
inline const std::string& SocketIdWithToken::accesstoken() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:oauth2ClientSocket.SocketIdWithToken.accessToken)
  return _internal_accesstoken();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SocketIdWithToken::set_accesstoken(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.accesstoken_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:oauth2ClientSocket.SocketIdWithToken.accessToken)
}
inline std::string* SocketIdWithToken::mutable_accesstoken() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_accesstoken();
  // @@protoc_insertion_point(field_mutable:oauth2ClientSocket.SocketIdWithToken.accessToken)
  return _s;
}
inline const std::string& SocketIdWithToken::_internal_accesstoken() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.accesstoken_.Get();
}
inline void SocketIdWithToken::_internal_set_accesstoken(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.accesstoken_.Set(value, GetArena());
}
inline std::string* SocketIdWithToken::_internal_mutable_accesstoken() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.accesstoken_.Mutable( GetArena());
}
inline std::string* SocketIdWithToken::release_accesstoken() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:oauth2ClientSocket.SocketIdWithToken.accessToken)
  return _impl_.accesstoken_.Release();
}
inline void SocketIdWithToken::set_allocated_accesstoken(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.accesstoken_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accesstoken_.IsDefault()) {
          _impl_.accesstoken_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:oauth2ClientSocket.SocketIdWithToken.accessToken)
}

// string refreshToken = 3;
inline void SocketIdWithToken::clear_refreshtoken() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.refreshtoken_.ClearToEmpty();
}
inline const std::string& SocketIdWithToken::refreshtoken() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:oauth2ClientSocket.SocketIdWithToken.refreshToken)
  return _internal_refreshtoken();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SocketIdWithToken::set_refreshtoken(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.refreshtoken_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:oauth2ClientSocket.SocketIdWithToken.refreshToken)
}
inline std::string* SocketIdWithToken::mutable_refreshtoken() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_refreshtoken();
  // @@protoc_insertion_point(field_mutable:oauth2ClientSocket.SocketIdWithToken.refreshToken)
  return _s;
}
inline const std::string& SocketIdWithToken::_internal_refreshtoken() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.refreshtoken_.Get();
}
inline void SocketIdWithToken::_internal_set_refreshtoken(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.refreshtoken_.Set(value, GetArena());
}
inline std::string* SocketIdWithToken::_internal_mutable_refreshtoken() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.refreshtoken_.Mutable( GetArena());
}
inline std::string* SocketIdWithToken::release_refreshtoken() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:oauth2ClientSocket.SocketIdWithToken.refreshToken)
  return _impl_.refreshtoken_.Release();
}
inline void SocketIdWithToken::set_allocated_refreshtoken(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.refreshtoken_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.refreshtoken_.IsDefault()) {
          _impl_.refreshtoken_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:oauth2ClientSocket.SocketIdWithToken.refreshToken)
}

// -------------------------------------------------------------------

// Empty

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace oauth2ClientSocket


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_oauth2_5fclient_5fsocket_2eproto_2epb_2eh
